package languagelab.lang.structure.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import jetbrains.mps.smodel.runtime.EnumerationDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import jetbrains.mps.smodel.runtime.DataTypeDescriptor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;
import jetbrains.mps.smodel.adapter.ids.MetaIdFactory;
import org.jetbrains.mps.openapi.model.SNodeReference;
import jetbrains.mps.smodel.adapter.ids.PrimitiveTypeId;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptAggregate = createDescriptorForAggregate();
  /*package*/ final ConceptDescriptor myConceptAttribute = createDescriptorForAttribute();
  /*package*/ final ConceptDescriptor myConceptEnumElement = createDescriptorForEnumElement();
  /*package*/ final ConceptDescriptor myConceptEnumeration = createDescriptorForEnumeration();
  /*package*/ final ConceptDescriptor myConceptILLIdentifier = createDescriptorForILLIdentifier();
  /*package*/ final ConceptDescriptor myConceptILLPostfixTrick = createDescriptorForILLPostfixTrick();
  /*package*/ final ConceptDescriptor myConceptProperty = createDescriptorForProperty();
  /*package*/ final ConceptDescriptor myConceptReference = createDescriptorForReference();
  /*package*/ final ConceptDescriptor myConceptType = createDescriptorForType();
  /*package*/ final EnumerationDescriptor myEnumerationAttrType = new EnumerationDescriptor_AttrType();
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptAggregate, myConceptAttribute, myConceptEnumElement, myConceptEnumeration, myConceptILLIdentifier, myConceptILLPostfixTrick, myConceptProperty, myConceptReference, myConceptType);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.Aggregate:
        return myConceptAggregate;
      case LanguageConceptSwitch.Attribute:
        return myConceptAttribute;
      case LanguageConceptSwitch.EnumElement:
        return myConceptEnumElement;
      case LanguageConceptSwitch.Enumeration:
        return myConceptEnumeration;
      case LanguageConceptSwitch.ILLIdentifier:
        return myConceptILLIdentifier;
      case LanguageConceptSwitch.ILLPostfixTrick:
        return myConceptILLPostfixTrick;
      case LanguageConceptSwitch.Property:
        return myConceptProperty;
      case LanguageConceptSwitch.Reference:
        return myConceptReference;
      case LanguageConceptSwitch.Type:
        return myConceptType;
      default:
        return null;
    }
  }

  @Override
  public Collection<DataTypeDescriptor> getDataTypeDescriptors() {
    return Arrays.asList(myEnumerationAttrType);
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForAggregate() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("languagelab.lang.structure", "Aggregate", 0x2ef2eb400107434eL, 0xb65d407af430cfecL, 0x1d49f38c2913f9d3L);
    b.class_(false, false, false);
    b.super_("languagelab.lang.structure.structure.Property", 0x2ef2eb400107434eL, 0xb65d407af430cfecL, 0x5128ca4df8a7358cL);
    b.parent(0x4caf0310491e41f5L, 0x8a9b2006b3a94898L, 0x40c1a7cb987d20d5L);
    b.origin("r:862bdb7b-f55f-49a6-bc53-62cd4f9465cc(languagelab.lang.structure.structure)/2110485683709934035");
    b.version(2);
    b.associate("type", 0x1d49f38c29140d0dL).target(0x2ef2eb400107434eL, 0xb65d407af430cfecL, 0x6d0f56d69c3c1cbaL).optional(true).origin((String) null).done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForAttribute() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("languagelab.lang.structure", "Attribute", 0x2ef2eb400107434eL, 0xb65d407af430cfecL, 0x1978f03659121e6L);
    b.class_(false, false, false);
    b.super_("languagelab.lang.structure.structure.Property", 0x2ef2eb400107434eL, 0xb65d407af430cfecL, 0x5128ca4df8a7358cL);
    b.parent(0x4caf0310491e41f5L, 0x8a9b2006b3a94898L, 0x40c1a7cb987d20d5L);
    b.origin("r:862bdb7b-f55f-49a6-bc53-62cd4f9465cc(languagelab.lang.structure.structure)/114717560272921062");
    b.version(2);
    b.property("e", 0x1978f03659121eaL).type(MetaIdFactory.dataTypeId(0x2ef2eb400107434eL, 0xb65d407af430cfecL, 0x3c41f053bc608d97L)).origin((SNodeReference) null).done();
    b.associate("enumType", 0x1678091ddc706f43L).target(0x2ef2eb400107434eL, 0xb65d407af430cfecL, 0x3f880d78dc146632L).optional(true).origin((String) null).done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForEnumElement() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("languagelab.lang.structure", "EnumElement", 0x2ef2eb400107434eL, 0xb65d407af430cfecL, 0x1678091ddc6fa498L);
    b.class_(false, false, false);
    b.parent(0x2ef2eb400107434eL, 0xb65d407af430cfecL, 0x786df22bf9a08b1bL);
    b.parent(0x4caf0310491e41f5L, 0x8a9b2006b3a94898L, 0x40c1a7cb987d20d5L);
    b.origin("r:862bdb7b-f55f-49a6-bc53-62cd4f9465cc(languagelab.lang.structure.structure)/1619054089896699032");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForEnumeration() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("languagelab.lang.structure", "Enumeration", 0x2ef2eb400107434eL, 0xb65d407af430cfecL, 0x3f880d78dc146632L);
    b.class_(false, false, true);
    b.parent(0x2ef2eb400107434eL, 0xb65d407af430cfecL, 0x786df22bf9a08b1bL);
    b.parent(0x4caf0310491e41f5L, 0x8a9b2006b3a94898L, 0x40c1a7cb987d20d5L);
    b.origin("r:862bdb7b-f55f-49a6-bc53-62cd4f9465cc(languagelab.lang.structure.structure)/4577923833961670194");
    b.version(2);
    b.aggregate("elements", 0x3f880d78dc14f462L).target(0x2ef2eb400107434eL, 0xb65d407af430cfecL, 0x1678091ddc6fa498L).optional(true).ordered(true).multiple(true).origin((String) null).done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForILLIdentifier() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("languagelab.lang.structure", "ILLIdentifier", 0x2ef2eb400107434eL, 0xb65d407af430cfecL, 0x786df22bf9a08b1bL);
    b.interface_();
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:862bdb7b-f55f-49a6-bc53-62cd4f9465cc(languagelab.lang.structure.structure)/8677858327698377499");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForILLPostfixTrick() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("languagelab.lang.structure", "ILLPostfixTrick", 0x2ef2eb400107434eL, 0xb65d407af430cfecL, 0x4862544b7216e879L);
    b.interface_();
    b.parent(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L);
    b.origin("r:862bdb7b-f55f-49a6-bc53-62cd4f9465cc(languagelab.lang.structure.structure)/5215824001461839993");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForProperty() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("languagelab.lang.structure", "Property", 0x2ef2eb400107434eL, 0xb65d407af430cfecL, 0x5128ca4df8a7358cL);
    b.class_(false, false, false);
    b.parent(0x2ef2eb400107434eL, 0xb65d407af430cfecL, 0x786df22bf9a08b1bL);
    b.parent(0x4caf0310491e41f5L, 0x8a9b2006b3a94898L, 0x40c1a7cb987d20d5L);
    b.origin("r:862bdb7b-f55f-49a6-bc53-62cd4f9465cc(languagelab.lang.structure.structure)/5848146552373589388");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForReference() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("languagelab.lang.structure", "Reference", 0x2ef2eb400107434eL, 0xb65d407af430cfecL, 0x1978f03659088ddL);
    b.class_(false, false, false);
    b.super_("languagelab.lang.structure.structure.Property", 0x2ef2eb400107434eL, 0xb65d407af430cfecL, 0x5128ca4df8a7358cL);
    b.parent(0x4caf0310491e41f5L, 0x8a9b2006b3a94898L, 0x40c1a7cb987d20d5L);
    b.origin("r:862bdb7b-f55f-49a6-bc53-62cd4f9465cc(languagelab.lang.structure.structure)/114717560272881885");
    b.version(2);
    b.associate("type", 0x1978f03659088f7L).target(0x2ef2eb400107434eL, 0xb65d407af430cfecL, 0x6d0f56d69c3c1cbaL).optional(true).origin((String) null).done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForType() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("languagelab.lang.structure", "Type", 0x2ef2eb400107434eL, 0xb65d407af430cfecL, 0x6d0f56d69c3c1cbaL);
    b.class_(false, false, true);
    b.parent(0x2ef2eb400107434eL, 0xb65d407af430cfecL, 0x786df22bf9a08b1bL);
    b.parent(0x4caf0310491e41f5L, 0x8a9b2006b3a94898L, 0x40c1a7cb987d20d5L);
    b.origin("r:862bdb7b-f55f-49a6-bc53-62cd4f9465cc(languagelab.lang.structure.structure)/7858595354528980154");
    b.version(2);
    b.property("rootable", 0x27b70365d7759284L).type(PrimitiveTypeId.BOOLEAN).origin((SNodeReference) null).done();
    b.property("isNamed", 0x1d49f38c290821baL).type(PrimitiveTypeId.BOOLEAN).origin((SNodeReference) null).done();
    b.associate("parentType", 0x55ce2ad3d281e42bL).target(0x2ef2eb400107434eL, 0xb65d407af430cfecL, 0x6d0f56d69c3c1cbaL).optional(true).origin((String) null).done();
    b.aggregate("attributes", 0x1978f0365912249L).target(0x2ef2eb400107434eL, 0xb65d407af430cfecL, 0x1978f03659121e6L).optional(true).ordered(true).multiple(true).origin((String) null).done();
    b.aggregate("aggregates", 0x1d49f38c291302ceL).target(0x2ef2eb400107434eL, 0xb65d407af430cfecL, 0x1d49f38c2913f9d3L).optional(true).ordered(true).multiple(true).origin((String) null).done();
    b.aggregate("references", 0x1978f03659088e1L).target(0x2ef2eb400107434eL, 0xb65d407af430cfecL, 0x1978f03659088ddL).optional(true).ordered(true).multiple(true).origin((String) null).done();
    return b.create();
  }
}
