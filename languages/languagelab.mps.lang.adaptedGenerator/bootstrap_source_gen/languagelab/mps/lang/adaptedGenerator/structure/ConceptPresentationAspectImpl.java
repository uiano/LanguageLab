package languagelab.mps.lang.adaptedGenerator.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.ConceptPresentationAspectBase;
import jetbrains.mps.smodel.runtime.ConceptPresentation;
import org.jetbrains.annotations.Nullable;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.ConceptPresentationBuilder;

public class ConceptPresentationAspectImpl extends ConceptPresentationAspectBase {
  private ConceptPresentation props_LLChangeIfMacro;
  private ConceptPresentation props_LLCopySourceListMacro;
  private ConceptPresentation props_LLIfMacro;
  private ConceptPresentation props_LLLoopMacro;
  private ConceptPresentation props_LLParentReferenceMacro;
  private ConceptPresentation props_LLPropertyMacro;
  private ConceptPresentation props_LLPropertyMacro_GetPropertyValue_Behaviour;
  private ConceptPresentation props_LLReduction_MappingRule;
  private ConceptPresentation props_LLRootTemplateAnnotation;
  private ConceptPresentation props_LLRoot_MappingRule;
  private ConceptPresentation props_LLSelfReferenceMacro;
  private ConceptPresentation props_LLSimpleReferenceMacro;
  private ConceptPresentation props_LLSpecialReferenceMacro;
  private ConceptPresentation props_LLTemplateDeclaration;

  @Override
  @Nullable
  public ConceptPresentation getDescriptor(SAbstractConcept c) {
    StructureAspectDescriptor structureDescriptor = (StructureAspectDescriptor) myLanguageRuntime.getAspect(jetbrains.mps.smodel.runtime.StructureAspectDescriptor.class);
    switch (structureDescriptor.internalIndex(c)) {
      case LanguageConceptSwitch.LLChangeIfMacro:
        if (props_LLChangeIfMacro == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByReference(0xe0a091b2dc994294L, 0xa6268d2e85598ee6L, 0x3afac1bd2d4b60b0L, 0x3afac1bd2d4b60b1L, "myRef", "", "");
          props_LLChangeIfMacro = cpb.create();
        }
        return props_LLChangeIfMacro;
      case LanguageConceptSwitch.LLCopySourceListMacro:
        if (props_LLCopySourceListMacro == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("LLCopySourceListMacro");
          props_LLCopySourceListMacro = cpb.create();
        }
        return props_LLCopySourceListMacro;
      case LanguageConceptSwitch.LLIfMacro:
        if (props_LLIfMacro == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("LLIfMacro");
          props_LLIfMacro = cpb.create();
        }
        return props_LLIfMacro;
      case LanguageConceptSwitch.LLLoopMacro:
        if (props_LLLoopMacro == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("LLLoopMacro");
          props_LLLoopMacro = cpb.create();
        }
        return props_LLLoopMacro;
      case LanguageConceptSwitch.LLParentReferenceMacro:
        if (props_LLParentReferenceMacro == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("LLParentReferenceMacro");
          props_LLParentReferenceMacro = cpb.create();
        }
        return props_LLParentReferenceMacro;
      case LanguageConceptSwitch.LLPropertyMacro:
        if (props_LLPropertyMacro == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByReference(0xe0a091b2dc994294L, 0xa6268d2e85598ee6L, 0x3afac1bd2d5b525eL, 0x3afac1bd2d5b5261L, "myAttr", "", "");
          props_LLPropertyMacro = cpb.create();
        }
        return props_LLPropertyMacro;
      case LanguageConceptSwitch.LLPropertyMacro_GetPropertyValue_Behaviour:
        if (props_LLPropertyMacro_GetPropertyValue_Behaviour == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("LLPropertyMacro_GetPropertyValue_Behaviour");
          props_LLPropertyMacro_GetPropertyValue_Behaviour = cpb.create();
        }
        return props_LLPropertyMacro_GetPropertyValue_Behaviour;
      case LanguageConceptSwitch.LLReduction_MappingRule:
        if (props_LLReduction_MappingRule == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("LLmap");
          props_LLReduction_MappingRule = cpb.create();
        }
        return props_LLReduction_MappingRule;
      case LanguageConceptSwitch.LLRootTemplateAnnotation:
        if (props_LLRootTemplateAnnotation == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("LLRootTemplateAnnotation");
          props_LLRootTemplateAnnotation = cpb.create();
        }
        return props_LLRootTemplateAnnotation;
      case LanguageConceptSwitch.LLRoot_MappingRule:
        if (props_LLRoot_MappingRule == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("LLmap");
          props_LLRoot_MappingRule = cpb.create();
        }
        return props_LLRoot_MappingRule;
      case LanguageConceptSwitch.LLSelfReferenceMacro:
        if (props_LLSelfReferenceMacro == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("LLSelfReferenceMacro");
          props_LLSelfReferenceMacro = cpb.create();
        }
        return props_LLSelfReferenceMacro;
      case LanguageConceptSwitch.LLSimpleReferenceMacro:
        if (props_LLSimpleReferenceMacro == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByReference(0xe0a091b2dc994294L, 0xa6268d2e85598ee6L, 0x3afac1bd2d5b5310L, 0x3afac1bd2d5b5313L, "myRef", "", "");
          props_LLSimpleReferenceMacro = cpb.create();
        }
        return props_LLSimpleReferenceMacro;
      case LanguageConceptSwitch.LLSpecialReferenceMacro:
        if (props_LLSpecialReferenceMacro == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.rawPresentation("LLSpecialReferenceMacro");
          props_LLSpecialReferenceMacro = cpb.create();
        }
        return props_LLSpecialReferenceMacro;
      case LanguageConceptSwitch.LLTemplateDeclaration:
        if (props_LLTemplateDeclaration == null) {
          ConceptPresentationBuilder cpb = new ConceptPresentationBuilder();
          cpb.presentationByName();
          props_LLTemplateDeclaration = cpb.create();
        }
        return props_LLTemplateDeclaration;
    }
    return null;
  }
}
