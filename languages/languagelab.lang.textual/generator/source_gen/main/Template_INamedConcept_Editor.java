package main;

/*Generated by MPS */

import jetbrains.mps.generator.runtime.Generated;
import jetbrains.mps.generator.runtime.TemplateDeclarationBase;
import jetbrains.mps.generator.runtime.TemplateDeclaration;
import org.jetbrains.mps.openapi.model.SNodeReference;
import java.util.Collection;
import org.jetbrains.mps.openapi.model.SNode;
import org.jetbrains.annotations.NotNull;
import jetbrains.mps.generator.runtime.TemplateExecutionEnvironment;
import jetbrains.mps.generator.runtime.TemplateContext;
import jetbrains.mps.generator.runtime.GenerationException;
import org.jetbrains.mps.openapi.model.SNodeAccessUtil;
import jetbrains.mps.generator.impl.reference.RefResolver;
import jetbrains.mps.smodel.SNodePointer;
import jetbrains.mps.generator.template.SourceSubstituteMacroNodesContext;
import jetbrains.mps.generator.runtime.TemplateUtil;
import org.jetbrains.mps.openapi.language.SConcept;
import jetbrains.mps.smodel.adapter.structure.MetaAdapterFactory;
import org.jetbrains.mps.openapi.language.SProperty;
import org.jetbrains.mps.openapi.language.SReferenceLink;
import org.jetbrains.mps.openapi.language.SContainmentLink;

@Generated
public class Template_INamedConcept_Editor extends TemplateDeclarationBase implements TemplateDeclaration {

  public Template_INamedConcept_Editor() {
  }

  public SNodeReference getTemplateNode() {
    return template_vaugx8_a0a3;
  }
  public Collection<SNode> apply(@NotNull final TemplateExecutionEnvironment environment, @NotNull final TemplateContext context) throws GenerationException {
    final SNode tnode1 = environment.createOutputNode(myConcepts[0]);
    try {
      environment.nodeCopied(context, tnode1, "tpl/r:8f686c14-57a1-42ec-b78f-dc89d09136f4/5751329688189737631");
      SNodeAccessUtil.setProperty(tnode1, myProperties[0], "llmap_Petrinet");
      environment.resolve(new RefResolver(tnode1, myAssociationLinks[0], context, new SNodePointer("r:8f686c14-57a1-42ec-b78f-dc89d09136f4(main@generator)", "5751329688189783309"), "INamedConcept") {
        @Override
        public Object resolve() {
          return QueriesGenerated.referenceMacro_GetReferent_2_0(createQueryContext());
        }
      });
      TemplateContext context1 = context.subContext();
      {
        final SNode tnode2 = environment.createOutputNode(myConcepts[1]);
        try {
          TemplateContext context2 = context1.subContext();
          {
            Collection<SNode> tlist3 = null;
            final Iterable<SNode> copyListInput3 = QueriesGenerated.sourceNodesQuery_2_0(new SourceSubstituteMacroNodesContext(context2, copySrcListMacro_vaugx8_b0a0a1a1a1a4a1a4));
            tlist3 = environment.copyNodes(copyListInput3, copySrcListMacro_vaugx8_b0a0a1a1a1a4a1a4, "tpl/r:8f686c14-57a1-42ec-b78f-dc89d09136f4/485512855555401839", context2);
            for (SNode child4 : TemplateUtil.asNotNull(tlist3)) {
              tnode2.addChild(myAggregationLinks[0], child4);
            }
            // TODO validate child 
          }
          {
            final SNode tnode5 = environment.createOutputNode(myConcepts[2]);
            try {
            } finally {
            }
            tnode2.addChild(myAggregationLinks[1], tnode5);
            // TODO validate child 
          }
        } finally {
        }
        tnode1.addChild(myAggregationLinks[2], tnode2);
        // TODO validate child 
      }
    } finally {
    }
    return TemplateUtil.singletonList(tnode1);
  }

  public Collection<SNode> apply(@NotNull final TemplateContext context) throws GenerationException {
    return apply(context.getEnvironment(), context);
  }

  @Override
  protected SConcept[] initConcepts() {
    SConcept[] rv = new SConcept[3];
    rv[0] = MetaAdapterFactory.getConcept(MetaAdapterFactory.getLanguage(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, "jetbrains.mps.lang.editor"), 0xf9845363abL, "ConceptEditorDeclaration");
    rv[1] = MetaAdapterFactory.getConcept(MetaAdapterFactory.getLanguage(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, "jetbrains.mps.lang.editor"), 0xf9eaff2517L, "CellModel_Collection");
    rv[2] = MetaAdapterFactory.getConcept(MetaAdapterFactory.getLanguage(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, "jetbrains.mps.lang.editor"), 0x10192dcf685L, "CellLayout_Horizontal");
    return rv;
  }
  @Override
  protected SProperty[] initProperties() {
    SProperty[] rv = new SProperty[1];
    rv[0] = MetaAdapterFactory.getProperty(0xceab519525ea4f22L, 0x9b92103b95ca8c0cL, 0x110396eaaa4L, 0x110396ec041L, "name");
    return rv;
  }
  @Override
  protected SReferenceLink[] initAssociationLinks() {
    SReferenceLink[] rv = new SReferenceLink[1];
    rv[0] = MetaAdapterFactory.getReferenceLink(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0x10f7df344a9L, 0x10f7df451aeL, "conceptDeclaration");
    return rv;
  }
  @Override
  protected SContainmentLink[] initAggregationLinks() {
    SContainmentLink[] rv = new SContainmentLink[3];
    rv[0] = MetaAdapterFactory.getContainmentLink(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0xf9eaff2517L, 0xf9eaff2518L, "childCellModel");
    rv[1] = MetaAdapterFactory.getContainmentLink(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0xf9eaff2517L, 0x10192e0d3baL, "cellLayout");
    rv[2] = MetaAdapterFactory.getContainmentLink(0x18bc659203a64e29L, 0xa83a7ff23bde13baL, 0xfba0eb7c50L, 0xfba0ec5415L, "cellModel");
    return rv;
  }
  private static SNodePointer template_vaugx8_a0a3 = new SNodePointer("r:8f686c14-57a1-42ec-b78f-dc89d09136f4(main@generator)", "5751329688189737631");
  private static SNodePointer copySrcListMacro_vaugx8_b0a0a1a1a1a4a1a4 = new SNodePointer("r:8f686c14-57a1-42ec-b78f-dc89d09136f4(main@generator)", "485512855555401843");
}
