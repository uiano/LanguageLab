package languagelab.lang.textual.structure;

/*Generated by MPS */

import jetbrains.mps.smodel.runtime.BaseStructureAspectDescriptor;
import jetbrains.mps.smodel.runtime.ConceptDescriptor;
import java.util.Collection;
import java.util.Arrays;
import org.jetbrains.annotations.Nullable;
import jetbrains.mps.smodel.adapter.ids.SConceptId;
import jetbrains.mps.smodel.runtime.DataTypeDescriptor;
import org.jetbrains.mps.openapi.language.SAbstractConcept;
import jetbrains.mps.smodel.runtime.impl.ConceptDescriptorBuilder2;
import jetbrains.mps.smodel.adapter.ids.PrimitiveTypeId;
import org.jetbrains.mps.openapi.model.SNodeReference;

public class StructureAspectDescriptor extends BaseStructureAspectDescriptor {
  /*package*/ final ConceptDescriptor myConceptSymbol = createDescriptorForSymbol();
  /*package*/ final ConceptDescriptor myConceptTextAggregate = createDescriptorForTextAggregate();
  /*package*/ final ConceptDescriptor myConceptTextAttribute = createDescriptorForTextAttribute();
  /*package*/ final ConceptDescriptor myConceptTextConstant = createDescriptorForTextConstant();
  /*package*/ final ConceptDescriptor myConceptTextReference = createDescriptorForTextReference();
  /*package*/ final ConceptDescriptor myConceptTextSyntax = createDescriptorForTextSyntax();
  private final LanguageConceptSwitch myIndexSwitch;

  public StructureAspectDescriptor() {
    myIndexSwitch = new LanguageConceptSwitch();
  }

  @Override
  public Collection<ConceptDescriptor> getDescriptors() {
    return Arrays.asList(myConceptSymbol, myConceptTextAggregate, myConceptTextAttribute, myConceptTextConstant, myConceptTextReference, myConceptTextSyntax);
  }

  @Override
  @Nullable
  public ConceptDescriptor getDescriptor(SConceptId id) {
    switch (myIndexSwitch.index(id)) {
      case LanguageConceptSwitch.Symbol:
        return myConceptSymbol;
      case LanguageConceptSwitch.TextAggregate:
        return myConceptTextAggregate;
      case LanguageConceptSwitch.TextAttribute:
        return myConceptTextAttribute;
      case LanguageConceptSwitch.TextConstant:
        return myConceptTextConstant;
      case LanguageConceptSwitch.TextReference:
        return myConceptTextReference;
      case LanguageConceptSwitch.TextSyntax:
        return myConceptTextSyntax;
      default:
        return null;
    }
  }

  @Override
  public Collection<DataTypeDescriptor> getDataTypeDescriptors() {
    return Arrays.asList();
  }

  /*package*/ int internalIndex(SAbstractConcept c) {
    return myIndexSwitch.index(c);
  }

  private static ConceptDescriptor createDescriptorForSymbol() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("languagelab.lang.textual", "Symbol", 0x884830c7aa44151L, 0xa40f0c18ee248daaL, 0x4fd0d3e12aafcb6bL);
    b.class_(false, false, false);
    b.parent(0x4caf0310491e41f5L, 0x8a9b2006b3a94898L, 0x40c1a7cb987d20d5L);
    b.origin("r:bdcd1a53-996d-4d5f-987b-3615d4a3edb9(languagelab.lang.textual.structure)/5751329688189389675");
    b.version(2);
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTextAggregate() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("languagelab.lang.textual", "TextAggregate", 0x884830c7aa44151L, 0xa40f0c18ee248daaL, 0x4fd0d3e12aafcb6fL);
    b.class_(false, false, false);
    b.super_("languagelab.lang.textual.structure.Symbol", 0x884830c7aa44151L, 0xa40f0c18ee248daaL, 0x4fd0d3e12aafcb6bL);
    b.parent(0x4caf0310491e41f5L, 0x8a9b2006b3a94898L, 0x40c1a7cb987d20d5L);
    b.origin("r:bdcd1a53-996d-4d5f-987b-3615d4a3edb9(languagelab.lang.textual.structure)/5751329688189389679");
    b.version(2);
    b.associate("aggr", 0x4fd0d3e12aafcb70L).target(0x2ef2eb400107434eL, 0xb65d407af430cfecL, 0x1d49f38c2913f9d3L).optional(true).origin((String) null).done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTextAttribute() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("languagelab.lang.textual", "TextAttribute", 0x884830c7aa44151L, 0xa40f0c18ee248daaL, 0x4fd0d3e12aafcb71L);
    b.class_(false, false, false);
    b.super_("languagelab.lang.textual.structure.Symbol", 0x884830c7aa44151L, 0xa40f0c18ee248daaL, 0x4fd0d3e12aafcb6bL);
    b.parent(0x4caf0310491e41f5L, 0x8a9b2006b3a94898L, 0x40c1a7cb987d20d5L);
    b.origin("r:bdcd1a53-996d-4d5f-987b-3615d4a3edb9(languagelab.lang.textual.structure)/5751329688189389681");
    b.version(2);
    b.associate("attr", 0x4fd0d3e12aafcb72L).target(0x2ef2eb400107434eL, 0xb65d407af430cfecL, 0x1978f03659121e6L).optional(true).origin((String) null).done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTextConstant() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("languagelab.lang.textual", "TextConstant", 0x884830c7aa44151L, 0xa40f0c18ee248daaL, 0x4fd0d3e12aafcb73L);
    b.class_(false, false, false);
    b.super_("languagelab.lang.textual.structure.Symbol", 0x884830c7aa44151L, 0xa40f0c18ee248daaL, 0x4fd0d3e12aafcb6bL);
    b.parent(0x4caf0310491e41f5L, 0x8a9b2006b3a94898L, 0x40c1a7cb987d20d5L);
    b.origin("r:bdcd1a53-996d-4d5f-987b-3615d4a3edb9(languagelab.lang.textual.structure)/5751329688189389683");
    b.version(2);
    b.property("text", 0x4fd0d3e12aafcb75L).type(PrimitiveTypeId.STRING).origin((SNodeReference) null).done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTextReference() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("languagelab.lang.textual", "TextReference", 0x884830c7aa44151L, 0xa40f0c18ee248daaL, 0x4fd0d3e12aafcb6cL);
    b.class_(false, false, false);
    b.super_("languagelab.lang.textual.structure.Symbol", 0x884830c7aa44151L, 0xa40f0c18ee248daaL, 0x4fd0d3e12aafcb6bL);
    b.parent(0x4caf0310491e41f5L, 0x8a9b2006b3a94898L, 0x40c1a7cb987d20d5L);
    b.origin("r:bdcd1a53-996d-4d5f-987b-3615d4a3edb9(languagelab.lang.textual.structure)/5751329688189389676");
    b.version(2);
    b.associate("refe", 0x4fd0d3e12aafcb6dL).target(0x2ef2eb400107434eL, 0xb65d407af430cfecL, 0x1978f03659088ddL).optional(true).origin((String) null).done();
    b.associate("attr", 0x4fd0d3e12ab5ad1cL).target(0x2ef2eb400107434eL, 0xb65d407af430cfecL, 0x1978f03659121e6L).optional(true).origin((String) null).done();
    return b.create();
  }
  private static ConceptDescriptor createDescriptorForTextSyntax() {
    ConceptDescriptorBuilder2 b = new ConceptDescriptorBuilder2("languagelab.lang.textual", "TextSyntax", 0x884830c7aa44151L, 0xa40f0c18ee248daaL, 0x6d0f56d69c3c1cbaL);
    b.class_(false, false, true);
    b.parent(0x2ef2eb400107434eL, 0xb65d407af430cfecL, 0x4862544b7216e879L);
    b.parent(0x4caf0310491e41f5L, 0x8a9b2006b3a94898L, 0x40c1a7cb987d20d5L);
    b.origin("r:bdcd1a53-996d-4d5f-987b-3615d4a3edb9(languagelab.lang.textual.structure)/7858595354528980154");
    b.version(2);
    b.associate("type", 0x55ce2ad3d281e42bL).target(0x2ef2eb400107434eL, 0xb65d407af430cfecL, 0x6d0f56d69c3c1cbaL).optional(true).origin((String) null).done();
    b.aggregate("symbols", 0x1978f0365912249L).target(0x884830c7aa44151L, 0xa40f0c18ee248daaL, 0x4fd0d3e12aafcb6bL).optional(true).ordered(true).multiple(true).origin((String) null).done();
    return b.create();
  }
}
